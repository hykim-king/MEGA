<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.Membership.membershipmapper">

    <!-- 1. 단건 조회 -->
    <select id="doSelectOne" parameterType="MembershipDTO" resultType="MembershipDTO">
        SELECT user_id,
               admin_id,
               email,
               password,
               birth,
               email_auth,
               email_auth_token,
               grade,
               profile_image,
               reg_dt
          FROM membership
         WHERE user_id = #{userId}
    </select>

    <!-- 2. 등록 -->
    <insert id="doSave" parameterType="MembershipDTO">
        INSERT INTO MEMBERSHIP (
            USER_ID, ADMIN_ID, EMAIL, PASSWORD, BIRTH,
            EMAIL_AUTH, EMAIL_AUTH_TOKEN, GRADE, PROFILE_IMAGE, REG_DT
        ) VALUES (
            #{userId},
            #{adminId,jdbcType=VARCHAR},
            #{email},
            #{password},
            #{birth},
            #{emailAuth},
            #{emailAuthToken},
            #{grade},
            #{profileImage,jdbcType=VARCHAR},
            SYSDATE
        )
    </insert>

    <!-- 3. 수정 -->
    <update id="doUpdate" parameterType="MembershipDTO">
        UPDATE MEMBERSHIP
           SET PASSWORD      = #{password},
               GRADE         = #{grade},
               PROFILE_IMAGE = #{profileImage,jdbcType=VARCHAR}
         WHERE USER_ID = #{userId}
    </update>

    <!-- 4. 삭제(단건) -->
    <delete id="doDelete" parameterType="MembershipDTO">
        DELETE FROM MEMBERSHIP WHERE USER_ID = #{userId}
    </delete>

    <!-- 5. 전체 건수 -->
    <select id="getCount" resultType="int">
        SELECT COUNT(*) FROM MEMBERSHIP
    </select>

    <!-- 6. 테스트용 대량 INSERT -->
    <insert id="saveAll">
        INSERT INTO MEMBERSHIP
        SELECT 'user' || LEVEL          AS userId,
               'admin01'               AS adminId,
               'user01@example.com'    AS email,
               'password'              AS password,
               TO_DATE(
                 DECODE(MOD(LEVEL,2),0,'2025-05-26','2025-06-22'),
                 'YYYY-MM-DD'
               )                      AS birth,
               'N'                     AS emailAuth,
               'dummy-token'           AS emailAuthToken,
               DECODE(MOD(LEVEL,2),0,1,9) AS grade,
               NULL                    AS profileImage,
               SYSDATE
          FROM dual
       <![CDATA[ CONNECT BY LEVEL <= 200]]>
    </insert>

    <!-- 7. 전체 삭제 -->
    <delete id="deleteAll">
        DELETE FROM MEMBERSHIP
    </delete>

    <!-- 8. ID 중복 체크 -->
    <select id="idCheck" parameterType="string" resultType="int">
        SELECT COUNT(*) FROM MEMBERSHIP WHERE USER_ID = #{userId}
    </select>

    <!-- 9. (선택) 목록 조회 : 주석 처리 or 추후 구현 -->
</mapper>
